"use strict";(self.webpackChunkluisguisado=self.webpackChunkluisguisado||[]).push([[518],{4369:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"atajo-ctrl-muestra-e-en-lugar-de-sugerencias-en-vscode-con-ubuntu-gnome","metadata":{"permalink":"/atajo-ctrl-muestra-e-en-lugar-de-sugerencias-en-vscode-con-ubuntu-gnome","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-04-15-atajo-ctrl-muestra-e-en-lugar-de-sugerencias-en-vscode-con-ubuntu-gnome/index.md","source":"@site/blog/2024-04-15-atajo-ctrl-muestra-e-en-lugar-de-sugerencias-en-vscode-con-ubuntu-gnome/index.md","title":"Atajo Ctrl + . muestra \xabe\xbb en lugar de sugerencias en VSCode con Ubuntu (GNOME)","description":"Imagen del error","date":"2024-04-15T00:00:00.000Z","tags":[{"inline":true,"label":"vscode","permalink":"/tags/vscode"},{"inline":true,"label":"visual studio code","permalink":"/tags/visual-studio-code"},{"inline":true,"label":"development","permalink":"/tags/development"},{"inline":true,"label":"ubuntu","permalink":"/tags/ubuntu"},{"inline":true,"label":"shortcut","permalink":"/tags/shortcut"}],"readingTime":1.225,"hasTruncateMarker":true,"authors":[{"name":"Luis Guisado","title":"Blog personal","url":"https://github.com/lguisadom","image_url":"https://github.com/lguisadom.png","imageURL":"https://github.com/lguisadom.png","key":null,"page":null}],"frontMatter":{"slug":"atajo-ctrl-muestra-e-en-lugar-de-sugerencias-en-vscode-con-ubuntu-gnome","title":"Atajo Ctrl + . muestra \xabe\xbb en lugar de sugerencias en VSCode con Ubuntu (GNOME)","authors":[{"name":"Luis Guisado","title":"Blog personal","url":"https://github.com/lguisadom","image_url":"https://github.com/lguisadom.png","imageURL":"https://github.com/lguisadom.png"}],"tags":["vscode","visual studio code","development","ubuntu","shortcut"]},"unlisted":false,"nextItem":{"title":"Flameshot, la mejor herramienta de captura de pantalla para Ubuntu 22.04 LTS","permalink":"/flameshot-la-mejor-herramienta-de-captura-de-pantalla-para-ubuntu-22-04-lts"}},"content":"_Imagen del error_\\n![Comportamiento errado](./0.gif)\\n\\n_Comportamiento esperado_\\n![Comportamiento esperado](./1.gif)\\n\\nHace un tiempo, me enfrent\xe9 a una complicaci\xf3n al emplear el atajo de teclado `CTRL + .` en Visual Studio Code, una acci\xf3n que suelo utilizar de manera habitual para implementar autom\xe1ticamente los m\xe9todos de una interfaz dentro de una clase. En lugar de recibir la sugerencia anticipada por parte de VSCode para completar la importaci\xf3n, me encontr\xe9 con la aparici\xf3n de un car\xe1cter \\\\\\"e\\\\\\" subrayado, lo que, adem\xe1s de interrumpir mi trabajo, desactivaba el funcionamiento de otras teclas. En estos casos, para restablecer la normalidad ten\xeda que pulsar la tecla `Esc`.\\n\\nAfortunadamente, despu\xe9s de googlear un poco, pude encontrar la soluci\xf3n. Al menos sirve hasta que lo parchen. A continuaci\xf3n, compartir\xe9 los pasos que segu\xed para resolver este problema, en caso de que puedan ser \xfatiles para alguien m\xe1s.\\n\\n\x3c!--truncate--\x3e\\n\\n   \\n## Pasos para resolver el problema\\nAbre la configuraci\xf3n de IBus ejecutando **ibus-setup** en la terminal. Ingresa el siguiente comando:\\n\\n```\\nibus-setup\\n```\\n\\nSe abrir\xe1 la siguiente ventana:\\n\\n![](./2.png)\\n\\nSeleccionar la pesta\xf1a **Emoji**. Ver\xe1s en la secci\xf3n **Emoji annotation** el valor `<Control>semicolon`\\n\\n![](./3.png)\\n\\nDale clic en el bot\xf3n con los puntos suspensivos **...** que se encuentra ubicado al lado derecho. Se abrir\xe1 otra ventana. \\n\\n![](./4.png)\\n\\nAll\xed selecciona \\n**Control period** y luego b\xf3rralo con el bot\xf3n **Delete**\\n\\nFinalmente has clic en el bot\xf3n **OK** y cierra las ventanas. Eso ser\xeda todo.\\n\\n![](./5.png)\\n\\nDiscusiones en internet que profundizan en este problema:\\n- https://stackoverflow.com/questions/75360949/how-do-i-get-imports-to-show-up-when-i-press-ctrldot-in-javascript-in-vscode\\n- https://stackoverflow.com/questions/71997823/ctrl-dot-makes-e-appear-instead-of-showing-suggestions-in-vscode-on-gnome\\n- https://www.reddit.com/r/gnome/comments/v5p8fi/you_can_insert_emoji_quickly_by_pressing_ctrl/"},{"id":"flameshot-la-mejor-herramienta-de-captura-de-pantalla-para-ubuntu-22-04-lts","metadata":{"permalink":"/flameshot-la-mejor-herramienta-de-captura-de-pantalla-para-ubuntu-22-04-lts","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-03-15-flameshot-la-mejor-herramienta-de-captura-de-pantalla-para-ubuntu-22-04-lts/index.md","source":"@site/blog/2024-03-15-flameshot-la-mejor-herramienta-de-captura-de-pantalla-para-ubuntu-22-04-lts/index.md","title":"Flameshot, la mejor herramienta de captura de pantalla para Ubuntu 22.04 LTS","description":"Flameshot es, sin duda, mi herramienta favorita para hacer capturas de pantalla (screenshot) en Ubuntu 22.04. Sus opciones y flexibilidad me recuerdan mucho al popular LightShot de Windows.","date":"2024-03-15T00:00:00.000Z","tags":[{"inline":true,"label":"flameshot","permalink":"/tags/flameshot"},{"inline":true,"label":"screenshot","permalink":"/tags/screenshot"},{"inline":true,"label":"ubuntu","permalink":"/tags/ubuntu"},{"inline":true,"label":"capturas","permalink":"/tags/capturas"}],"readingTime":4.7,"hasTruncateMarker":true,"authors":[{"name":"Luis Guisado","title":"Blog personal","url":"https://github.com/lguisadom","image_url":"https://github.com/lguisadom.png","imageURL":"https://github.com/lguisadom.png","key":null,"page":null}],"frontMatter":{"slug":"flameshot-la-mejor-herramienta-de-captura-de-pantalla-para-ubuntu-22-04-lts","title":"Flameshot, la mejor herramienta de captura de pantalla para Ubuntu 22.04 LTS","authors":[{"name":"Luis Guisado","title":"Blog personal","url":"https://github.com/lguisadom","image_url":"https://github.com/lguisadom.png","imageURL":"https://github.com/lguisadom.png"}],"tags":["flameshot","screenshot","ubuntu","capturas"]},"unlisted":false,"prevItem":{"title":"Atajo Ctrl + . muestra \xabe\xbb en lugar de sugerencias en VSCode con Ubuntu (GNOME)","permalink":"/atajo-ctrl-muestra-e-en-lugar-de-sugerencias-en-vscode-con-ubuntu-gnome"},"nextItem":{"title":"Las mejores fuentes para programar en VSCode","permalink":"/las-mejores-fuentes-para-programar-vscod-ubuntu"}},"content":"![](./0.gif)\\n\\nFlameshot es, sin duda, mi herramienta favorita para hacer capturas de pantalla (screenshot) en Ubuntu 22.04. Sus opciones y flexibilidad me recuerdan mucho al popular LightShot de Windows. \\n\\n![](./1.jpg)\\n\\nEn esta publicaci\xf3n pretendo mostrar su instalaci\xf3n y configuraci\xf3n para que pueda ser utilizado sin problemas junto el capturador de pantalla nativo que viene con Ubuntu 22.04.\\n\\n![Demo de Flameshot](./2.gif)\\n\\n\x3c!--truncate--\x3e\\n\\n## Instalaci\xf3n\\nLa instalaci\xf3n de Flameshot es directa y r\xe1pida. Basta con ejecutar el siguiente comando en la terminal:\\n\\n```shell\\nsudo apt install flameshot\\n``` \\n\\nLuego hay que pulsar `y` o `s` (dependiendo del idioma que tengan configurado) para confirmar la instalaci\xf3n.\\n\\nUna vez culminada la instalaci\xf3n, lo abriremos. Para ello, podemos presionar la tecla \u201cWindows\u201d o sino hacer click en el Dash y luego tipear \u201cflameshot\u201d as\xed como en la siguiente imagen:\\n\\n![Flameshot instalado](./3.png)\\n\\nSi nos percatamos, aparecer\xe1 el \xedcono de Flameshot en la barra superior de Ubuntu 22.04. Si le damos clic, se abrir\xe1 un men\xfa contextual con todas las opciones que trae.\\n\\n![](./4.png)\\n\\nTiene muchas opciones para poder personalizarlo a gusto.\\n\\n![](./5.png)\\n\\n\\nPero a\xfan queda un detalle\u2026 Si pulsamos la tecla \xabPrint screen\xbb (ingl\xe9s) o \xabImpr Pant\xbb (espa\xf1ol) que es la que se suele usar para obtener capturas de pantalla, se nos abrir\xe1 la herramienta nativa de Ubuntu.\\n\\n![](./6.png)\\n\\n\\n## Configuraci\xf3n del shortcut (atajo de teclado) para usar Flameshot\\n\\nEn esta secci\xf3n, demostrar\xe9 c\xf3mo ajustar los atajos de teclado en Ubuntu para poder utilizar Flameshot junto con el capturador nativo de Ubuntu sin que entren en conflicto. Para lograrlo, primero configurar\xe9 el atajo \xabCtrl + Impr Pant\xbb para que active el capturador de pantalla nativo de Ubuntu. Luego, proceder\xe9 a configurar la tecla \xabImpr Pant\xbb para que active Flameshot.\\n\\n### 1 Cambiando el shortcut para el capturador nativo de Ubuntu\\n\\nIremos a las configuraciones de Ubuntu. Para ello podemos hacer clic en la esquina superior derecha, donde se ubican los \xedconos de red, volumen y/o carga de la bater\xeda. En el men\xfa contextual que se despliega, hay que elegir **\xabSettings\xbb**.\\n\\n![](./7.png)\\n\\nEn el panel lateral izquierdo, elegimos la opci\xf3n \xabKeyboard\xbb. Luego, buscamos la secci\xf3n **\xabKeyboard Shortcuts\xbb**.\\n\\n\\n![](./8.png)\\n\\nHacemos clic en el item **View and Customize Shortcuts**.\\n\\n\\n![](./9.png)\\n\\nEn la ventana que se abre, hacemos clic en **\xabScreenshots\xbb**.\\n\\n![](./10.png)\\n\\nSe abrir\xe1 la ventana \xabScreenshots\xbb. En esta ventana buscamos la opci\xf3n **\xabTake a screenshot interactively\xbb** y hacemos clic en \xe9l. Vemos que por defecto tiene asignada el shortcut **\xabPrint\xbb** el cual corresponde a la tecla **\xabPrint Screen\xbb**.\\n\\n![](./11.png)\\n\\nSe nos abrir\xe1 la ventana **\xabSet Shortcut\xbb** donde debemos pulsar el atajo de teclado que queremos asignarle. En nuestro caso, debemos pulsar `\xabContrl + Print\xbb`. Acto seguido, hacemos clic en el bot\xf3n **\xabSet\xbb** para hacer efectivo el cambio que acabamos de hacer.\\n\\n![](./12.png)\\n\\nAhora podemos observar que ha cambiado el shortcut asignado a esta opci\xf3n.\\n\\n![](./13.png)\\n\\n\\nCon estos pasos hemos cambiado el atajo de teclado asignado al capturador de pantalla nativo de Ubuntu. Para terminar esta parte, cerramos la ventana \xabScreenshots\xbb.\\n\\n\\n### 2 Agregando el shortcut para Flameshot\\n\\nDebemos volver a ubicarnos en los Settings de Ubuntu. En el panel lateral izquierdo, elegimos la opci\xf3n \xabKeyboard\xbb. Luego, buscamos la secci\xf3n **\xabKeyboard Shortcuts\xbb**. Hacemos clic en el item **\xabView and Customize Shortcuts\xbb**.\\n\\n![](./14.png)\\n\\n\\nEn la ventana **\xabKeyboard Shortcuts\xbb** buscaremos la opci\xf3n **\xabCustom Shortcuts\xbb** y hacemos clic en \xe9l.\\n\\n![](./15.png)\\n\\n\\nEn la ventana que se abre **\xabCustom Shortcuts\xbb**, hacemos clic en el bot\xf3n **\xabAdd Shortcut\xbb**.\\n\\n![](./16.png)\\n\\n\\nSe abrir\xe1 la ventana **\xabAdd Custom Shortcut\xbb**. Aqu\xed vamos asignar el atajo de teclado para ejecutar Flameshot. Para ello, agreguemos lo siguiente:\\n\\n- Name: **Flameshot**\\n- Command: **/usr/bin/flameshot gui**\\n\\n![](./17.png)\\n\\n\\nAhora, hacemos clic en el bot\xf3n **\xabSet Shortcut\u2026.\xbb**. Se abrir\xe1 una ventana donde debemos pulsar la tecla **\xabPrint Screen\xbb**, que es la que queremos asignar por defecto a Flameshot. Luego hacemos clic en el bot\xf3n **\xabAdd\xbb**.\\n\\n![](./18.png)\\n\\nVeremos que en la lista de Atajos personalizados, nos aparece el que acabamos de a\xf1adir **\xabFlameshot\xbb** y la tecla asignada **\xabPrint\xbb**.\\n\\n![](./19.png)\\n\\n\\n### 3 Ajustes finales\\n#### Archivo custom.conf\\nPara terminar, es necesario cambiar del entorno de Wayland al servidor de pantalla Xorg. La raz\xf3n detr\xe1s de este cambio radica en la incompatibilidad parcial de Flameshot con Wayland. Para llevar a cabo esta acci\xf3n, se requiere editar el archivo /etc/gdm3/custom.conf mediante el siguiente comando:\\n\\n```shell\\nsudo nano /etc/gdm3/custom.conf\\n```\\n\\n![](./20.png)\\n\\nUbica la l\xednea #WaylandEnable=false y quita el s\xedmbolo \u2018#\u2019 para descomentarla, de manera que quede as\xed: `WaylandEnable=false`. Presiona `Ctrl+X`, seguido de `Y`, y luego `Enter` para guardar y salir del archivo.\\n\\n![](./21.png)\\n\\n\\n#### Variable de entorno QT_QPA_PLATFORM\\n\\n- Para .bashrc:\\n```shell\\nnano ~/.bashrc\\n```\\n\\n- Para .zshrc:\\n```shell\\nnano ~/.zshrc\\n```\\n\\nAgrega la siguiente l\xednea al final del archivo\\n```shell\\nexport QT_QPA_PLATFORM=xcb\\n```\\n\\n![](./22.png)\\n\\nPresiona `Ctrl+X`, seguido de `Y`, y luego `Enter` para guardar y salir del archivo. Luego reinicia la computadora.\\n\\nUna vez reiniciada la sesi\xf3n en el sistema, al presionar la tecla \xabPrint Screen\xbb, Flameshot se ejecutar\xe1 autom\xe1ticamente. Es el momento de empezar a utilizarlo y explorar todas sus opciones.\\n\\n![](./23.png)\\n\\n\\nEn este art\xedculo breve, he compartido la forma como configuro mi sistema Ubuntu, permiti\xe9ndome utilizar dos herramientas de captura de pantalla: Flameshot y la preinstalada en Ubuntu 22.04. Adem\xe1s, he asegurado que ambas puedan coexistir sin conflictos asign\xe1ndoles atajos de teclado distintos: Flameshot con **\xabPrint Screen\xbb** y la herramienta nativa con **\xabCtrl + Print Screen\xbb**.\\n\\nPara concluir, me gustar\xeda se\xf1alar que he encontrado situaciones en las que Flameshot no pudo realizar capturas de pantalla, mientras que el capturador nativo de Ubuntu s\xed pudo hacerlo. Este \xfaltimo es capaz de capturar elementos como men\xfas contextuales, el dash e incluso  por encima de Flameshot mismo. Por ello, considero que ambos capturadores son \xfatiles y pueden complementarse entre s\xed."},{"id":"las-mejores-fuentes-para-programar-vscod-ubuntu","metadata":{"permalink":"/las-mejores-fuentes-para-programar-vscod-ubuntu","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-03-01-las-mejores-fuentes-para-programar-vscod-ubuntu/index.md","source":"@site/blog/2024-03-01-las-mejores-fuentes-para-programar-vscod-ubuntu/index.md","title":"Las mejores fuentes para programar en VSCode","description":"Durante mi tiempo en la programaci\xf3n, he tenido la oportunidad de explorar diferentes tipos de fuentes (aunque no han sido muchas). De todas ellas, mis dos favoritas son JetBrains Mono y Fira Code. A continuaci\xf3n, comparto los pasos que he seguido para instalarlas en mi sistema Ubuntu 22.04 y c\xf3mo seleccionarlas en Visual Studio Code.","date":"2024-03-01T00:00:00.000Z","tags":[{"inline":true,"label":"ubuntu","permalink":"/tags/ubuntu"},{"inline":true,"label":"fonts","permalink":"/tags/fonts"},{"inline":true,"label":"fuentes","permalink":"/tags/fuentes"},{"inline":true,"label":"ligaduras","permalink":"/tags/ligaduras"},{"inline":true,"label":"vscode","permalink":"/tags/vscode"}],"readingTime":3.18,"hasTruncateMarker":true,"authors":[{"name":"Luis Guisado","title":"Blog personal","url":"https://github.com/lguisadom","image_url":"https://github.com/lguisadom.png","imageURL":"https://github.com/lguisadom.png","key":null,"page":null}],"frontMatter":{"slug":"las-mejores-fuentes-para-programar-vscod-ubuntu","title":"Las mejores fuentes para programar en VSCode","authors":[{"name":"Luis Guisado","title":"Blog personal","url":"https://github.com/lguisadom","image_url":"https://github.com/lguisadom.png","imageURL":"https://github.com/lguisadom.png"}],"tags":["ubuntu","fonts","fuentes","ligaduras","vscode"]},"unlisted":false,"prevItem":{"title":"Flameshot, la mejor herramienta de captura de pantalla para Ubuntu 22.04 LTS","permalink":"/flameshot-la-mejor-herramienta-de-captura-de-pantalla-para-ubuntu-22-04-lts"},"nextItem":{"title":"Mi problema con la lentitud de Bloq Mayus en GNU/Linux (Ubuntu)","permalink":"/solucion-problema-bloq-mayus-linux-ubuntu"}},"content":"![](./0.png)\\n\\nDurante mi tiempo en la programaci\xf3n, he tenido la oportunidad de explorar diferentes tipos de fuentes (aunque no han sido muchas). De todas ellas, mis dos favoritas son **JetBrains Mono** y **Fira Code**. A continuaci\xf3n, comparto los pasos que he seguido para instalarlas en mi sistema **Ubuntu 22.04** y c\xf3mo seleccionarlas en Visual Studio Code.\\n\\n\x3c!--truncate--\x3e\\n\\n# JetBrains Mono\\n\\nEn internet existen diversas formas de hacerlo, pero mi m\xe9todo preferido es a trav\xe9s del gestor de paquetes apt. Primero, actualizamos los paquetes de nuestro sistema local con la informaci\xf3n m\xe1s reciente de los repositorios de Ubuntu.\\n\\n```shell\\nsudo apt update\\n```\\n\\nLuego, instalamos el paquete de fuentes llamado `fonts-jetbrains-mono` en nuestro sistema Ubuntu con privilegio de root.\\n\\n```shell\\nsudo apt -y install fonts-jetbrains-mono\\n```\\n\\nAhora abrimos VSCode, y entramos a las preferencias: **File / Preferences / Settings**\\n\\n![](./1.png)\\n\\n```shell\\nDespu\xe9s seleccionamos **Text Editor / Font / Font Family**\\n```\\n\\n![](./2.png)\\n\\nDentro del campo de texto de \xabFont Family\xbb, a\xf1adimos al principio el nombre de la fuente \u2018JetBrains Mono\u2019, incluyendo las comillas simples. Es importante separarlo con comas de cualquier otro nombre de fuente que est\xe9 presente. Por ejemplo:\\n\\nAntes de a\xf1adir la fuente `\'JetBrains Mono\'`\\n\\n```shell\\n\'Droid Sans Mono\', \'monospace\', monospace\\n```\\n\\nLuego de a\xf1adir la fuente `\'JetBrains Mono\'`\\n\\n```shell\\n\'JetBrains Mono\', \'Droid Sans Mono\', \'monospace\', monospace\\n```\\n\\nAl final debe quedar as\xed:\\n\\n![](./3.png)\\n\\n## Ligadura\\nLas ligaduras son una caracter\xedstica que traen algunas fuentes y que permite mejorar la visibilidad y la est\xe9tica del c\xf3digo. Personalmente  me han traido ventajas como: mejora de la legibilidad y est\xe9tica, distinci\xf3n r\xe1pida de ciertas combinaciones de caracteres, refuerzo en la comprensi\xf3n sem\xe1ntica del c\xf3digo y flexibilidad de uso (puedo activarlas y desactivarlas cuando lo necesite). \\n\\nLa siguiente imagen ilustra la diferencia en la visualizaci\xf3n de los operadores relacionales ==, >=, != y => con y sin ligaduras (fila superior sin ligaduras, fila inferior con ligaduras):\\n\\n\\n![](./4.png)\\n\\nAunque no todas las fuentes incluyen ligaduras, JetBrains Mono s\xed lo hace.\\n\\nLas siguientes im\xe1genes, tomadas de la p\xe1gina oficial de JetBrains Mono, muestras otros operadores con y sin ligaduras:\\n\\n**Sin ligaduras**\\n![](./5.png)\\n\\n**Con ligaduras**\\n![](./6.png)\\n\\nPara activar las ligaduras en VSCode, es necesario acceder a la opci\xf3n **Edit in settings.json** en la secci\xf3n **Font Ligatures**, la cual se encuentra ubicada debajo de **Font Family**\\n\\n![](./7.png)\\n\\nSe abrir\xe1 un archivo settings.json en el que debemos asignar el valor de true a la propiedad `editor.fontLigatures`\\n\\n![](./8.png)\\n\\nAdicionalmente, se puede configurar el grosor de la fuente con la propiedad `editor.fontWeight` asign\xe1ndole alg\xfan valor como:\\n\\n```shell\\n\\"editor.fontWeight\\": \\"300\\" // Light\\n\\"editor.fontWeight\\": \\"400\\" // Regular\\n\\"editor.fontWeight\\": \\"450\\" // Retina\\n\\"editor.fontWeight\\": \\"500\\" // Medium\\n\\"editor.fontWeight\\": \\"600\\" // Bold\\n```\\n\\n\\n\\nSi los cambios de fuente no se reflejan de inmediado, es posible que sea necesario reiniciar VSCode. Esto se puede hacer r\xe1pidamente utilizando el atajo `CTRL+SHIFT+P` y escribiendo **Reload**. Luego, elige la opci\xf3n **Developer: Reload Window** y pulsa `ENTER`.\\n\\n![](./9.png)\\n\\n# Fira Code\\nFira Code es otra de mis fuentes favoritas. El proceso de instalaci\xf3n y configuraci\xf3n en VSCode es id\xe9ntico al que mostr\xe9 para JetBrains Mono. Simplemente hay que instalar la fuente y luego ir a la configuraci\xf3n de Font Family para establecer el nuevo tipo de letra:\\n\\n```shell\\nsudo apt install fonts-firacode\\n```\\n\\nAntes de agregar la fuente `\'Fira Code\'`\\n\\n\\n```shell\\n\'JetBrains Mono\', \'Droid Sans Mono\', \'monospace\', monospace\\n```\\n\\nLuego de agregar la fuente `\'JetBrains Mono\'`\\n\\n```shell\\n\'Fira Code\', \'JetBrains Mono\', \'Droid Sans Mono\', \'monospace\', monospace\\n```\\n\\n\\nAl final debe quedar as\xed:\\n\\n![](./10.png)\\n\\n\\n\\nTambi\xe9n se pueden activar las ligaduras con Fira Code utilizando el mismo procedimiento que se ha presentado anteriormente.\\n\\nHe probado otras fuentes, pero ninguna me ha terminado de convencer. Como un plus, les comparto un enlace a una web en donde podr\xe1n encontrar una amplia variedad de fuentes, tanto con ligaduras como sin ellas. Qui\xe9n sabe, quiz\xe1s encuentren tipograf\xedas a\xfan mejores: [https://www.programmingfonts.org/](https://www.programmingfonts.org/)"},{"id":"solucion-problema-bloq-mayus-linux-ubuntu","metadata":{"permalink":"/solucion-problema-bloq-mayus-linux-ubuntu","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-12-01-solucion-problema-bloq-mayus-linux-ubuntu/index.md","source":"@site/blog/2022-12-01-solucion-problema-bloq-mayus-linux-ubuntu/index.md","title":"Mi problema con la lentitud de Bloq Mayus en GNU/Linux (Ubuntu)","description":"Tengo la (mala) costumbre de usar la tecla Bloq Mayus cada vez que quiero escribir letras en may\xfasculas desde el teclado. Siempre pens\xe9 que usar esa tecla era lo \xabnormal\xbb y nunca tuve inconvenientes con ello hasta que me top\xe9 por primera vez con GNU/Linux, espec\xedficamente con Ubuntu. Habr\xe1 sido hace unos 7 a\xf1os cuando quise experimentar con un sistema operativo que no sea el cl\xe1sico Windows.","date":"2022-12-01T00:00:00.000Z","tags":[{"inline":true,"label":"ubuntu","permalink":"/tags/ubuntu"},{"inline":true,"label":"bloq mayus","permalink":"/tags/bloq-mayus"},{"inline":true,"label":"caps lock","permalink":"/tags/caps-lock"},{"inline":true,"label":"keyboard config","permalink":"/tags/keyboard-config"}],"readingTime":4.24,"hasTruncateMarker":true,"authors":[{"name":"Luis Guisado","title":"Blog personal","url":"https://github.com/lguisadom","image_url":"https://github.com/lguisadom.png","imageURL":"https://github.com/lguisadom.png","key":null,"page":null}],"frontMatter":{"slug":"solucion-problema-bloq-mayus-linux-ubuntu","title":"Mi problema con la lentitud de Bloq Mayus en GNU/Linux (Ubuntu)","authors":[{"name":"Luis Guisado","title":"Blog personal","url":"https://github.com/lguisadom","image_url":"https://github.com/lguisadom.png","imageURL":"https://github.com/lguisadom.png"}],"tags":["ubuntu","bloq mayus","caps lock","keyboard config"]},"unlisted":false,"prevItem":{"title":"Las mejores fuentes para programar en VSCode","permalink":"/las-mejores-fuentes-para-programar-vscod-ubuntu"}},"content":"Tengo la (mala) costumbre de usar la tecla **[Bloq Mayus](https://es.wikipedia.org/wiki/Bloq_May%C3%BAs)** cada vez que quiero escribir letras en may\xfasculas desde el teclado. Siempre pens\xe9 que usar esa tecla era lo \xabnormal\xbb y nunca tuve inconvenientes con ello hasta que me top\xe9 por primera vez con [GNU/Linux](https://es.wikipedia.org/wiki/GNU/Linux), espec\xedficamente con [Ubuntu](https://ubuntu.com/download). Habr\xe1 sido hace unos 7 a\xf1os cuando quise experimentar con un sistema operativo que no sea el cl\xe1sico Windows.\\n\\n![](./1.png)\\n\\n\x3c!--truncate--\x3e\\n\\n**GNU/Linux** es inmenso y a\xfan soy nuevo en este sistema, sin embargo, como parte de mis actividades como developer,  escribir (c\xf3digo, documentaci\xf3n, etc) es de las cosas que m\xe1s frecuentemente hago. Al usar Ubuntu, llegu\xe9 a notar que al intercambiar entre min\xfasculas a may\xfasculas mediante la tecla **[Bloq Mayus](https://es.wikipedia.org/wiki/Bloq_May%C3%BAs)** para capitalizar la primera letra de una palabra, exist\xeda (y sigue existiendo) un peque\xf1o delay o retraso que ocasionaba (dependiendo de tu velocidad de tipeo) que las dos o tres primeras letras de la palabra queden afectadas por dicha tecla.\\n\\nPara poner un ejemplo, al escribir mi primer nombre, en lugar de \xabLuis\xbb sol\xeda obtener \xabLUis\xbb o \xabLUIs\xbb. Esto me suced\xeda con mucha frecuencia y era demasiado inc\xf3modo. Tanto as\xed que fue una de las razones por las que declin\xe9 en varias oportunidades de seguir usando GNU/Linux (Ubuntu) como S.O principal.\\n\\nLuego de un par de a\xf1os m\xe1s usando Windows, decid\xed reintentarlo con Ubuntu. En esta ocasi\xf3n, prob\xe9 con adaptarme a la forma habitual de escribir con may\xfasculas sin bloqueo: usar la tecla Shift. Al principio, era lento al tipear y me costaba demasiado hacerlo velozmente pero con la pr\xe1ctica pude alcanzar cierto grado de destreza, aunque todav\xeda no con la misma fluidez que logr\xe9 en Windows usando Bloq Mayus.\\n\\n![](./2.png)\\n\\nAunque dediqu\xe9 tiempo a practicar, no logr\xe9 acostumbrarme a la tecla **Shift** para escribir con la misma comodidad y rapidez que con Bloq May\xfas. Por ello, decid\xed investigar c\xf3mo eliminar el \xabdelay\xbb presente en Ubuntu, que, desde mi punto de vista (totalmente subjetivo), le da una gran desventaja frente a Windows.\\n\\nA continuaci\xf3n, les presento un procedimiento que he probado con \xe9xito en las versiones 20.04 y 22.04 de Ubuntu. Si bien no me he adentrado en los detalles t\xe9cnicos de la soluci\xf3n, esta me ha permitido obtener el resultado que buscaba: replicar la funcionalidad de Bloq May\xfas de Windows y disfrutar de una experiencia de escritura m\xe1s fluida.\\n\\nLa soluci\xf3n original se puede revisar en este foro: [https://forum.manjaro.org/t/caps-lock-behaviour-wayland/79868/8](https://forum.manjaro.org/t/caps-lock-behaviour-wayland/79868/8).\\n\\nLos siguientes pasos lo realic\xe9 en una m\xe1quina con GNU/Linux y distribuci\xf3n Ubuntu 22.04 LTS\\n\\n![](./3.png)\\n\\nDesde la terminal debemos ubicarnos en la siguiente ruta: **/usr/share/X11/xkb/symbols/**\\n\\n```shell\\ncd /usr/share/X11/xkb/symbols/\\n```\\n\\nAsegurarnos de que existe el archivo capslock.\\n\\n```shell\\nls -al\\n\\n```\\n\\n![](./4.png)\\n\\nPor siacaso, antes de editar o eliminar algo, tomemos nuestras precauciones y hagamos una copia del archivo. Usaremos el comando **cp** y el archivo copiado se llamar\xe1 **capslock_bk** (o el nombre que quieran. Yo uso bk por \xabbackup\xbb).\\n\\n```shell\\ncp capslock capslock_bk\\n\\n```\\n\\n![](./5.png)\\n\\nYa que tenemos una copia de seguridad del archivo **capslock**, podemos experimentar sin temor. En primer lugar, vamos a  tener que cambiarle los permisos con el siguiente comando:\\n\\n```shell\\nsudo chmod 777 capslock\\n\\n```\\n\\nAhora vamos a editar el contenido de este archivo. Usaremos el editor **nano** para abrir el archivo **capslock**:\\n\\n![](./6.png)\\n\\n```shell\\nnano capslock\\n\\n```\\n\\nBuscar en el archivo el siguiente contenido:\\n\\n```shell\\n// This changes the <CAPS> key to become a Control modifier,\\n// but it will still produce the Caps_Lock keysym.\\nhidden partial modifier_keys\\nxkb_symbols \\"ctrl_modifier\\" {\\n    replace key <CAPS> {\\n        type[Group1] = \\"ONE_LEVEL\\",\\n        symbols[Group1] = [ Caps_Lock ],\\n        actions[Group1] = [ SetMods(modifiers=Control) ]\\n    };\\n    modifier_map Control { <CAPS> };\\n};\\n\\n```\\n\\nVamos a reeamplazar lo anterior por lo siguiente:\\n\\n```shell\\n// This changes the <CAPS> key to become a Control modifier,\\n// but it will still produce the Caps_Lock keysym.\\nhidden partial modifier_keys\\nxkb_symbols \\"ctrl_modifier\\" {\\n          key <CAPS> {\\n              type=\\"ALPHABETIC\\",\\n              repeat=No,\\n              symbols[Group1]= [ Caps_Lock, Caps_Lock ],\\n              actions[Group1]= [ LockMods(modifiers=Lock),\\n                                 LockMods(modifiers=Shift+Lock,affect=unlock) ]\\n          };\\n};\\n```\\n\\n![](./7.png)\\n\\nGuardamos los cambios presionando la combinaci\xf3n de teclas **CTRL + O**. Y luego la tecla **ENTER** para aceptar.\\n\\nDespu\xe9s, cerraremos el editor **nano** con el atajo de teclado **CTRL + X**. Estando en la terminal, restauraremos los permisos del archivo **capslock** a como estaba inicialmente:\\n\\n```shell\\nsudo chmod 644 capslock\\n\\n```\\n\\nLuego, toca instalar **GNOME Tweaks**. La forma m\xe1s pr\xe1ctica es usando el gestor de paquetes **apt**:\\n\\n```shell\\nsudo apt install gnome-tweaks\\n\\n```\\n\\nUna vez culminada la instalaci\xf3n de **Gnome Tweaks**, lo abriremos. Puede que lo encontremos con el nombre de \xabRetoques\xbb. Para ello, podemos presionar la tecla \xabWindows\xbb o sino hacer click en el Dash y luego tipear \xabtweak\xbb as\xed como en la siguiente imagen:\\n\\n![](./8.png)\\n\\nCuando se haya abierto la aplicaci\xf3n, nos ubicaremos en la opci\xf3n **Teclado y Rat\xf3n**. Luego, en el lado derecho clickearemos en el bot\xf3n **Opciones adicionales de la distribuci\xf3n**.\\n\\n![](./9.png)\\n\\nSe abrir\xe1 una ventana en la que tendremos que desplegar la opci\xf3n \xabComportamiento de Bloq May\xfas\xbb y luego seleccionar la opci\xf3n **Make Caps Lock an additional Ctrl**.\\n\\n![](./10.png)\\n\\nCon esto ya estar\xeda todo listo. Si no funciona de inmediato, les recomiendo reiniciar el sistema y volver a intentarlo."}]}}')}}]);